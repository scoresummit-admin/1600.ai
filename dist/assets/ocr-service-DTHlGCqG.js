var f=Object.defineProperty;var u=(o,e,t)=>e in o?f(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t;var c=(o,e,t)=>u(o,typeof e!="symbol"?e+"":e,t);import{g as p}from"./vendor-C8w-UNLI.js";import{r as T}from"./ocr-BQFO9rX7.js";var d=T();const x=p(d),r=class r{constructor(){c(this,"worker",null)}static getInstance(){return r.instance||(r.instance=new r),r.instance}async initialize(){if(!this.worker)try{this.worker=await x.createWorker("eng",1,{logger:e=>console.log("OCR:",e)}),await this.worker.setParameters({tessedit_char_whitelist:`0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz.,;:!?()[]{}"'-+=*/÷×√π°%$€£¥ `,tessedit_pageseg_mode:x.PSM.AUTO}),console.log("OCR worker initialized successfully")}catch(e){throw console.error("Failed to initialize OCR worker:",e),e}}async extractText(e){if(this.worker||await this.initialize(),!this.worker)throw new Error("OCR worker failed to initialize");try{console.log("Starting OCR extraction...");const t=Date.now(),{data:{text:n}}=await this.worker.recognize(e),s=Date.now()-t;return console.log(`OCR completed in ${s}ms`),this.cleanExtractedText(n)}catch(t){throw console.error("OCR extraction failed:",t),new Error("Failed to extract text from image")}}cleanExtractedText(e){return e.replace(/\s+/g," ").replace(/\b0\b/g,"O").replace(/\bl\b/g,"I").replace(/\b5\b(?=\w)/g,"S").replace(/\n\s*\n/g,`

`).replace(/\n(?=[a-z])/g," ").trim()}async terminate(){this.worker&&(await this.worker.terminate(),this.worker=null,console.log("OCR worker terminated"))}async extractSATQuestion(e){const n=(await this.extractText(e)).split(`
`).map(i=>i.trim()).filter(i=>i.length>0);let s="";const a=[];let l=!1;for(const i of n){const w=i.match(/^([A-D])[.)]\s*(.+)$/i);if(w){l=!0;const m=w[2].trim();a.push(m)}else l||(s+=(s?" ":"")+i)}const h=a.length>=3;return{questionText:s.trim(),choices:h?a:[],hasChoices:h}}};c(r,"instance");let g=r;export{g as OCRService};
